#!/usr/bin/env python

"""
    view_UAC_mesh.py

    View the simulation mesh with UAC and LGE scores.

    Also reports what a unit of kernel lengthscale is approx equal to in mm.
"""

import sys
import os

import pyvista as pv
import numpy as np

import mmserp.hdf5utils as hu
from mmserp.turbocmap import cmap
from mmserp.plots import plot_fields

def view_mesh(filename, evnum):

    evnum = int(evnum)

    # get mesh spatial data
    X = hu.getDataset(filename, "mesh", "X")
    Tri = hu.getDataset(filename, "mesh", "Tri")
    V = hu.getDataset(filename, "mesh", "V")
    title = "eigenvector"
    scalars = V[0:X.shape[0],evnum]

    # approximate average edge length
    av_edge = X[Tri[:,0:2]]
    av_edge_length = np.linalg.norm(av_edge[:,1,:] - av_edge[:,0,:], axis = 1).mean()
    print("1 unit of kernel lengthscale approximately {:2.2f}mm:".format(av_edge_length/10**3))

    plot_fields(X, Tri, [scalars], ["eigvec " + str(evnum) ]).show()

    input("[WAIT]: hit <return> to close.")

    return

if __name__ == "__main__":

    if len(sys.argv) != 3:
        print("Error: call as ./{} <filename> <eigenvector_number>".format(os.path.basename(__file__)))
    else:
        view_mesh(sys.argv[1], sys.argv[2])

