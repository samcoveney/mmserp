#!/usr/bin/env python

"""
    view_UAC_mesh.py

    View the simulation mesh with UAC and LGE scores.
"""

import sys
import os

import pyvista as pv
import numpy as np

import mmserp.hdf5utils as hu
from mmserp.turbocmap import cmap

def view_mesh(filename):

    # get mesh spatial data
    X = hu.getDataset(filename, "sim_mesh", "X")
    Tri = hu.getDataset(filename, "sim_mesh", "Tri")

    # for pyvista, first column must be set to '3' (i.e. triangle element)
    Tri = np.hstack([ np.full(Tri.shape[0], 3)[:,None] , Tri ])
    
    # create mesh object
    mesh = pv.PolyData(X, Tri)

    # UAC and LGE
    UAC = hu.getDataset(filename, "sim_mesh", "UAC").astype(np.float32)
    LGE = hu.getDataset(filename, "sim_mesh", "LGE_norm").astype(np.float32)

    # plot mesh, colored by stuff
    plotter = pv.Plotter(shape = (1,3))

    # add a mesh, with color
    for p in range(3):
        plotter.subplot(0, p)

        if p == 0:
            title = "UAC_1"
            scalars = UAC[:,0]
        if p == 1:
            title = "UAC_2"
            scalars = UAC[:,1]
        if p == 2:
            title = "LGE (normalized)"
            scalars = LGE

        plotter.add_mesh(mesh.copy(), scalars = scalars, opacity = 1.0, stitle = title, cmap = cmap) 

    plotter.link_views()
    plotter.show()
    input("[WAIT]: hit <return> to close.")

    return

if __name__ == "__main__":

    if len(sys.argv) != 2:
        print("Error: call as ./{} <filename>".format(os.path.basename(__file__)))
    else:
        view_mesh(sys.argv[1])

